package com.littlecloud.rptconsolidation.daos.impls;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.littlecloud.rptconsolidation.criterias.ConsolidateJobCriteria;
import com.littlecloud.rptconsolidation.daos.BaseDao;
import com.littlecloud.rptconsolidation.eos.ConsolidateJob;
import com.littlecloud.rptconsolidation.helpers.DaoHelper;
import com.littlecloud.utils.CommonUtils;

public class ConsolidateJobsDaoImpl extends BaseDao{
	private static final Logger log = LoggerFactory.getLogger(ConsolidateJobsDaoImpl.class);
	private final String selectSql = "select * from consolidate_jobs ";
	public ConsolidateJobsDaoImpl(){
		super();
	}
	public ConsolidateJobsDaoImpl(String mode){
		super(mode);
	}
	public List<ConsolidateJob> getConsolidateJobList(ConsolidateJobCriteria criteria){
		List<ConsolidateJob> results = new ArrayList<ConsolidateJob>();
		StringBuilder sqlSb = new StringBuilder(selectSql);
		PreparedStatement preparedStmt = null;
		try{			
			DaoHelper daoHelper = new DaoHelper();
			if (criteria != null){
				int count = 0;

				if (criteria.getId() != null && criteria.getId().intValue() > 0){
					if (count == 0){
						sqlSb.append("where ");
					} else {
						sqlSb.append(",id=? ");
					}
					Integer value = criteria.getId();
					daoHelper.putSequenceAndValue(count, value);
					count ++;
				}
				if (criteria.getJobName() != null && !criteria.getJobName().isEmpty()){
					if (count == 0){
						sqlSb.append("where ");
					} else {
						sqlSb.append(",job_name=? ");
					}
					String value = criteria.getJobName();
					daoHelper.putSequenceAndValue(count, value);
					count ++;
				}
				if (criteria.getServer() != null && !criteria.getServer().isEmpty()){
					if (count == 0){
						sqlSb.append("where ");
					} else {
						sqlSb.append(",server=? ");
					}
					String value = criteria.getServer();
					daoHelper.putSequenceAndValue(count, value);
					count ++;
				}
				if (criteria.getStatus() != null && !criteria.getStatus().isEmpty()){
					if (count == 0){
						sqlSb.append("where ");
					} else {
						sqlSb.append(",status=? ");
					}
					String value = criteria.getStatus();
					daoHelper.putSequenceAndValue(count, value);
					count ++;
				}
				if (criteria.getActive() != null){
					if (count == 0){
						sqlSb.append("where ");
					} else {
						sqlSb.append(",active=? ");
					}
					Boolean value = criteria.getActive();
					daoHelper.putSequenceAndValue(count, value);
					count ++;
				}
				if (criteria.getLimit() != null){

					sqlSb.append("limit ? ");
					Integer value = criteria.getLimit();
					daoHelper.putSequenceAndValue(count, value);
					count ++;
				}
			}
			preparedStmt = daoHelper.getPrepareStatement(conn, sqlSb.toString());
			
			ResultSet rs = preparedStmt.executeQuery();
			while (rs.next()){
				ConsolidateJob rsObj = new ConsolidateJob();
				rsObj.setId(CommonUtils.number2Integer((Number) rs.getObject("id")));
				rsObj.setCreatedDate((Date) rs.getObject("created_date"));
				rsObj.setUpdatedDate((Date) rs.getObject("updated_date"));
				rsObj.setServer((String) rs.getObject("server"));
				rsObj.setJobName((String) rs.getObject("job_name"));				
				rsObj.setStatus((String) rs.getObject("status"));
				rsObj.setStartDateTime((Date) rs.getObject("start_datetime"));
				rsObj.setEndDateTime((Date) rs.getObject("end_datetime"));
				rsObj.setActive((Boolean) rs.getObject("active"));
				results.add(rsObj);
			}	
		} catch (Exception e){
			if (e instanceof SQLException){
				log.error("ConsolidateJobsDao.getConsolidateJobList() - SQLException: ", e);
			} else {
				log.error("ConsolidateJobsDao.getConsolidateJobList() - Exception: ", e);
			}
		} finally {
			if (preparedStmt != null){
				try {
					preparedStmt.close();
				} catch (SQLException e) {
					log.error("ConsolidateJobsDao.getConsolidateJobList() close preparedStmt ... finally - Exception: ", e);
				}
				
			}
//			if (conn != null){
//				try {
//					conn.close();
//				} catch (SQLException e) {
//					log.error("ConsolidateJobsDao.getConsolidateJobList() close connection ... finally - Exception: ", e);
//				}
//			}
		}
		return results;
	}
	
	
}
