package com.littlecloud.rptconsolidation.factories;

import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.littlecloud.rptconsolidation.eos.ConsolidateJob;
import com.littlecloud.rptconsolidation.eos.SystemParamsBundles;
import com.littlecloud.rptconsolidation.threads.executors.RptConsolidationExecutor;
import com.littlecloud.rptconsolidation.threads.executors.impls.ConsolidateJobsConsumerExecutorImpl;
import com.littlecloud.rptconsolidation.threads.executors.impls.ConsolidateJobsProviderExecutorImpl;

public class ExecutorsFactory{
	private static final Logger log = LoggerFactory.getLogger(ExecutorsFactory.class);
	private static RptConsolidationExecutor<ConsolidateJob> consolidateConsumerJobsExecutor;
	private static BlockingQueue<ConsolidateJob> consolidateJobQueue;
	private static RptConsolidationExecutor<ConsolidateJob> consolidateProviderJobsExecutor;

	public static RptConsolidationExecutor<ConsolidateJob> getConsolidateJobsConsumerExecutorInstance(){
		try{
			if (consolidateConsumerJobsExecutor == null){
				consolidateConsumerJobsExecutor = new ConsolidateJobsConsumerExecutorImpl(getConsolidateJobQueueInstance());
			}
		} catch (Exception e){
			log.debug("CommonBsDbConnFactoryImpl.getConnectionInstance() - ", e);
		}
		return consolidateConsumerJobsExecutor;
	}
	
	public static RptConsolidationExecutor<ConsolidateJob> getConsolidateJobsProviderExecutorInstance(){
		try{
			if (consolidateProviderJobsExecutor == null){
				consolidateProviderJobsExecutor = new ConsolidateJobsProviderExecutorImpl(getConsolidateJobQueueInstance());
			}
		} catch (Exception e){
			log.debug("CommonBsDbConnFactoryImpl.getConnectionInstance() - ", e);
		}
		return consolidateConsumerJobsExecutor;
	}
	
	private static BlockingQueue<ConsolidateJob> getConsolidateJobQueueInstance() {
		try {
			SystemParamsBundles systemParamsBundles = BundlesFactory.getSystemParamsBundlesInstance();
			if (consolidateJobQueue == null){
				consolidateJobQueue = new ArrayBlockingQueue<ConsolidateJob>(systemParamsBundles.getQueueSize());
			}
		} catch (Exception e) {
			log.error("ExecutorsFactoryImpl.getConsolidateJobQueueInstance() - ", e );
		}
		return consolidateJobQueue;
	}
	
}
